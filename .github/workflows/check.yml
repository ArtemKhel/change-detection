name: Check code

on:
  [ push, pull_request ]

jobs:
  check:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ 3.11 ]

    steps:
      # Check-out repo and set-up python
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Install & configure poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      # Load cached venv if cache exists
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      # Install dependencies if cache does not exist
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      # Install pre-commit from .pre-commit-config.yaml
      - name: Install pre-commit
        run: |
          poetry run pre-commit install

      # Run pre-commit on all the files in the repo
      - name: Run pre-commit
        run: |
          poetry run pre-commit run --all-files --color always --verbose --show-diff-on-failure
